{"ast":null,"code":"var _jsxFileName = \"C:\\\\PROYECTOS\\\\VisualStudioNET\\\\WEBREACTCONTACTOS\\\\webreactcontactos\\\\src\\\\componentes\\\\seguridad\\\\RegistrarUsuario.js\";\nimport React, { Component, Fragment } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { withRouter } from 'react-router';\nimport axios from 'axios';\nimport AlertaSatisfactoria from '../../componentes/AlertaSatisfactoria';\nimport AlertaError from '../../componentes/AlertaError';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nclass RegistrarUsuario extends Component {\n  constructor(props) {\n    super(props);\n    const token = localStorage.getItem(\"token\");\n    let loggedIn = true;\n\n    if (token == null) {\n      loggedIn = false;\n    }\n\n    this.state = {\n      alert_message: '',\n      datosUsuario: {\n        Email: '',\n        Password: '',\n        ConfirmPassword: ''\n      },\n      loggedIn,\n      isNullEmail: true,\n      isNullPassword: true,\n      isNullComfirmPassword: true\n    };\n  }\n\n  ingresoUsuario() {\n    axios.post('https://localhost:44328/api/Usuarios/Ingresar', this.state.datosUsuario).then(response => {\n      //Se genera el token\n      localStorage.setItem(\"token\", \"jasdajalkcecklwcljekwej\"); //Se setea que ingreso\n\n      this.setState({\n        loggedIn: true,\n        alert_message: 'Acceso satisfactorio'\n      }); //Se inicializan la variable editarContactoModal y el objeto de datosEditarContacto\n\n      this.setState({\n        datosUsuario: {\n          Email: '',\n          Password: '',\n          ConfirmPassword: ''\n        }\n      });\n    });\n  }\n\n  validacionControles() {\n    if (this.state.datosUsuario.Email == '' && this.state.datosUsuario.Password == '' && this.state.datosUsuario.ConfirmPassword == '') {\n      this.setState({\n        alert_message: 'Introduzca los datos que se le solicitan',\n        isNullEmail: true,\n        isNullPassword: true,\n        isNullComfirmPassword: true\n      });\n      return false;\n    }\n  }\n\n  submitForm() {\n    axios.post('https://localhost:44328/api/Usuarios/Registrar', this.state.datosUsuario).then(response => {\n      //Se refresca el Table\n      this.ingresoUsuario(); //Se inicializan la variable editarContactoModal y el objeto de datosEditarContacto\n    }).catch(error => {\n      this.setState({\n        alert_message: 'Credenciales incorrectas'\n      });\n    });\n  }\n\n  render() {\n    if (this.state.loggedIn === true) {\n      //Otra forma de hacer redirect\n      // this.props.history.push(\"/\")\n      //return <Redirect  to=\"/\" />\n      window.location.href = '/';\n    }\n\n    return React.createElement(\"div\", {\n      id: \"cover-caption\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), this.state.alert_message != \"\" ? React.createElement(AlertaError, {\n      mensaje: this.state.alert_message,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }) : null, React.createElement(\"div\", {\n      id: \"container\",\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-6 offset-sm-4 text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"col-sm-6 display-5  my-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Registrar\"), React.createElement(\"div\", {\n      className: \"info-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      action: \"\",\n      className: \"form-inlin justify-content-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-group-prepend\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-group-text bg-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: this.state.isNullEmail ? 'red-icon' : 'green-icon',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"  \", React.createElement(FontAwesomeIcon, {\n      className: \"mr-1\",\n      icon: \"user-circle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    })))), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Usuario\",\n      name: \"nombreUsuario\",\n      value: this.state.datosUsuario.Email,\n      onChange: e => {\n        let datosUsuario = this.state.datosUsuario;\n        datosUsuario.Email = e.target.value;\n        this.setState({\n          datosUsuario\n        });\n      },\n      required: \"true\",\n      onBlur: e => {\n        let isNullEmail = this.state.isNullEmail;\n\n        if (e.target.value == '') {\n          this.setState({\n            isNullEmail: true\n          });\n        } else {\n          this.setState({\n            isNullEmail: false,\n            alert_message: ''\n          });\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-group-prepend\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-group-text bg-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: this.state.isNullPassword ? 'red-icon' : 'green-icon',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"  \", React.createElement(FontAwesomeIcon, {\n      className: \"mr-1\",\n      icon: \"key\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    })))), React.createElement(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\",\n      name: \"password\",\n      value: this.state.datosUsuario.Password,\n      onChange: e => {\n        let datosUsuario = this.state.datosUsuario;\n        datosUsuario.Password = e.target.value;\n        this.setState({\n          datosUsuario\n        });\n      },\n      required: \"true\",\n      maxlength: \"10\",\n      minlength: \"10\",\n      onBlur: e => {\n        let isNullPassword = this.state.isNullPassword;\n\n        if (e.target.value == '') {\n          this.setState({\n            isNullPassword: true\n          });\n        } else {\n          this.setState({\n            isNullPassword: false,\n            alert_message: ''\n          });\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-group-prepend\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-group-text bg-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: this.state.isNullComfirmPassword ? 'red-icon' : 'green-icon',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"  \", React.createElement(FontAwesomeIcon, {\n      className: \"mr-1\",\n      icon: \"key\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    })))), React.createElement(\"input\", {\n      type: \"password\",\n      placeholder: \"Confirmar password\",\n      name: \"confirmarPassword\",\n      value: this.state.datosUsuario.ConfirmPassword,\n      onChange: e => {\n        let datosUsuario = this.state.datosUsuario;\n        datosUsuario.ConfirmPassword = e.target.value;\n        this.setState({\n          datosUsuario\n        });\n      },\n      required: \"true\",\n      maxlength: \"10\",\n      minlength: \"10\",\n      onBlur: e => {\n        let isNullComfirmPassword = this.state.isNullComfirmPassword;\n\n        if (e.target.value == '') {\n          this.setState({\n            isNullComfirmPassword: true\n          });\n        } else {\n          this.setState({\n            isNullComfirmPassword: false,\n            alert_message: ''\n          });\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-success\",\n      onClick: this.submitForm.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      className: \"mr-1\",\n      icon: \"database\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }), \"Guardar\")))))))));\n  }\n\n}\n\nexport default RegistrarUsuario;","map":{"version":3,"sources":["C:\\PROYECTOS\\VisualStudioNET\\WEBREACTCONTACTOS\\webreactcontactos\\src\\componentes\\seguridad\\RegistrarUsuario.js"],"names":["React","Component","Fragment","Redirect","withRouter","axios","AlertaSatisfactoria","AlertaError","FontAwesomeIcon","RegistrarUsuario","constructor","props","token","localStorage","getItem","loggedIn","state","alert_message","datosUsuario","Email","Password","ConfirmPassword","isNullEmail","isNullPassword","isNullComfirmPassword","ingresoUsuario","post","then","response","setItem","setState","validacionControles","submitForm","catch","error","render","window","location","href","e","target","value","bind"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,QAAR,QAAuB,kBAAvB;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,KAAP,MAAmB,OAAnB;AACA,OAAOC,mBAAP,MAAgC,uCAAhC;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,SAASC,eAAT,QAAgC,gCAAhC;;AAEA,MAAMC,gBAAN,SAA+BR,SAA/B,CAAwC;AACtCS,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,UAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,QAAIC,QAAQ,GAAG,IAAf;;AACA,QAAIH,KAAK,IAAE,IAAX,EAAgB;AACdG,MAAAA,QAAQ,GAAG,KAAX;AACD;;AACD,SAAKC,KAAL,GAAa;AACXC,MAAAA,aAAa,EAAC,EADH;AAEXC,MAAAA,YAAY,EAAE;AACZC,QAAAA,KAAK,EAAE,EADK;AAEZC,QAAAA,QAAQ,EAAE,EAFE;AAGZC,QAAAA,eAAe,EAAE;AAHL,OAFH;AAOXN,MAAAA,QAPW;AAQXO,MAAAA,WAAW,EAAE,IARF;AASXC,MAAAA,cAAc,EAAE,IATL;AAUXC,MAAAA,qBAAqB,EAAE;AAVZ,KAAb;AAYD;;AACDC,EAAAA,cAAc,GACd;AAEIpB,IAAAA,KAAK,CAACqB,IAAN,CAAW,+CAAX,EAA4D,KAAKV,KAAL,CAAWE,YAAvE,EAAqFS,IAArF,CAA2FC,QAAD,IAAY;AACtG;AACAf,MAAAA,YAAY,CAACgB,OAAb,CAAqB,OAArB,EAA8B,yBAA9B,EAFsG,CAGtG;;AACA,WAAKC,QAAL,CAAc;AACZf,QAAAA,QAAQ,EAAE,IADE;AAEZE,QAAAA,aAAa,EAAE;AAFH,OAAd,EAJsG,CAQtG;;AACA,WAAKa,QAAL,CAAc;AAACZ,QAAAA,YAAY,EAAE;AAC3BC,UAAAA,KAAK,EAAE,EADoB;AAE3BC,UAAAA,QAAQ,EAAE,EAFiB;AAG3BC,UAAAA,eAAe,EAAE;AAHU;AAAf,OAAd;AAKG,KAdH;AAeH;;AAEAU,EAAAA,mBAAmB,GAAG;AAEpB,QAAI,KAAKf,KAAL,CAAWE,YAAX,CAAwBC,KAAxB,IAA+B,EAA/B,IAAqC,KAAKH,KAAL,CAAWE,YAAX,CAAwBE,QAAxB,IAAkC,EAAvE,IAA6E,KAAKJ,KAAL,CAAWE,YAAX,CAAwBG,eAAxB,IAAyC,EAA1H,EACA;AACE,WAAKS,QAAL,CAAc;AACZb,QAAAA,aAAa,EAAE,0CADH;AAEZK,QAAAA,WAAW,EAAE,IAFD;AAGZC,QAAAA,cAAc,EAAE,IAHJ;AAIZC,QAAAA,qBAAqB,EAAE;AAJX,OAAd;AAMA,aAAO,KAAP;AACD;AAIH;;AAEDQ,EAAAA,UAAU,GACV;AAEQ3B,IAAAA,KAAK,CAACqB,IAAN,CAAW,gDAAX,EAA6D,KAAKV,KAAL,CAAWE,YAAxE,EAAsFS,IAAtF,CAA4FC,QAAD,IAAY;AAEvG;AACA,WAAKH,cAAL,GAHuG,CAIvG;AAED,KANC,EAMCQ,KAND,CAMOC,KAAK,IAAE;AACZ,WAAKJ,QAAL,CAAc;AACZb,QAAAA,aAAa,EAAE;AADH,OAAd;AAGL,KAVG;AAYT;;AAEDkB,EAAAA,MAAM,GAAE;AACN,QAAI,KAAKnB,KAAL,CAAWD,QAAX,KAAsB,IAA1B,EAA+B;AAC7B;AACA;AACA;AACAqB,MAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAqB,GAArB;AACD;;AACD,WAEE;AAAK,MAAA,EAAE,EAAC,eAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEK,KAAKtB,KAAL,CAAWC,aAAX,IAA0B,EAA1B,GAA6B,oBAAC,WAAD;AAAa,MAAA,OAAO,EAAE,KAAKD,KAAL,CAAWC,aAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA7B,GAAgF,IAFrF,EAGI;AAAK,MAAA,EAAE,EAAC,WAAR;AAAoB,MAAA,SAAS,EAAC,WAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,kCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,0BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,MAAM,EAAC,EAAb;AAAgB,MAAA,SAAS,EAAC,mCAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE;AAAG,MAAA,SAAS,EAAI,KAAKD,KAAL,CAAWM,WAAX,GAAuB,UAAvB,GAAkC,YAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAmE,oBAAC,eAAD;AAAiB,MAAA,SAAS,EAAC,MAA3B;AAAkC,MAAA,IAAI,EAAC,aAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAnE,CAFF,CADF,CADF,EAOE;AAAO,MAAA,IAAI,EAAE,MAAb;AAAoB,MAAA,WAAW,EAAC,SAAhC;AAA0C,MAAA,IAAI,EAAC,eAA/C;AAA+D,MAAA,KAAK,EAAE,KAAKN,KAAL,CAAWE,YAAX,CAAwBC,KAA9F;AAAqG,MAAA,QAAQ,EAAGoB,CAAD,IAAK;AAAA,YAC7GrB,YAD6G,GAC7F,KAAKF,KADwF,CAC7GE,YAD6G;AAElHA,QAAAA,YAAY,CAACC,KAAb,GAAqBoB,CAAC,CAACC,MAAF,CAASC,KAA9B;AACA,aAAKX,QAAL,CAAc;AAACZ,UAAAA;AAAD,SAAd;AACD,OAJD;AAIG,MAAA,QAAQ,EAAC,MAJZ;AAKA,MAAA,MAAM,EAAGqB,CAAD,IAAK;AAAA,YACNjB,WADM,GACS,KAAKN,KADd,CACNM,WADM;;AAEX,YAAIiB,CAAC,CAACC,MAAF,CAASC,KAAT,IAAkB,EAAtB,EACE;AACE,eAAKX,QAAL,CAAc;AAACR,YAAAA,WAAW,EAAE;AAAd,WAAd;AACD,SAHH,MAGQ;AACJ,eAAKQ,QAAL,CAAc;AAACR,YAAAA,WAAW,EAAE,KAAd;AAAqBL,YAAAA,aAAa,EAAE;AAApC,WAAd;AACD;AACF,OAbH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,CADF,CAFF,EA2BE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,EAAI,KAAKD,KAAL,CAAWO,cAAX,GAA0B,UAA1B,GAAqC,YAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAsE,oBAAC,eAAD;AAAiB,MAAA,SAAS,EAAC,MAA3B;AAAkC,MAAA,IAAI,EAAC,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAtE,CADF,CADF,CADH,EAMI;AAAQ,MAAA,IAAI,EAAE,UAAd;AAAyB,MAAA,WAAW,EAAC,UAArC;AAAgD,MAAA,IAAI,EAAC,UAArD;AAAgE,MAAA,KAAK,EAAE,KAAKP,KAAL,CAAWE,YAAX,CAAwBE,QAA/F;AAAyG,MAAA,QAAQ,EAAGmB,CAAD,IAAK;AAAA,YACjHrB,YADiH,GACjG,KAAKF,KAD4F,CACjHE,YADiH;AAEtHA,QAAAA,YAAY,CAACE,QAAb,GAAwBmB,CAAC,CAACC,MAAF,CAASC,KAAjC;AACA,aAAKX,QAAL,CAAc;AAACZ,UAAAA;AAAD,SAAd;AACD,OAJD;AAII,MAAA,QAAQ,EAAC,MAJb;AAIoB,MAAA,SAAS,EAAC,IAJ9B;AAImC,MAAA,SAAS,EAAC,IAJ7C;AAKA,MAAA,MAAM,EAAGqB,CAAD,IAAK;AAAA,YACNhB,cADM,GACY,KAAKP,KADjB,CACNO,cADM;;AAEX,YAAIgB,CAAC,CAACC,MAAF,CAASC,KAAT,IAAkB,EAAtB,EACE;AACE,eAAKX,QAAL,CAAc;AAACP,YAAAA,cAAc,EAAE;AAAjB,WAAd;AACD,SAHH,MAGQ;AACJ,eAAKO,QAAL,CAAc;AAACP,YAAAA,cAAc,EAAE,KAAjB;AAAwBN,YAAAA,aAAa,EAAE;AAAvC,WAAd;AACD;AACF,OAbH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CADF,CA3BF,EAmDE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,EAAI,KAAKD,KAAL,CAAWQ,qBAAX,GAAiC,UAAjC,GAA4C,YAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA6E,oBAAC,eAAD;AAAiB,MAAA,SAAS,EAAC,MAA3B;AAAkC,MAAA,IAAI,EAAC,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA7E,CADF,CADF,CADH,EAMI;AAAQ,MAAA,IAAI,EAAE,UAAd;AAAyB,MAAA,WAAW,EAAC,oBAArC;AAA0D,MAAA,IAAI,EAAC,mBAA/D;AAAmF,MAAA,KAAK,EAAE,KAAKR,KAAL,CAAWE,YAAX,CAAwBG,eAAlH;AAAmI,MAAA,QAAQ,EAAGkB,CAAD,IAAK;AAAA,YAC3IrB,YAD2I,GAC3H,KAAKF,KADsH,CAC3IE,YAD2I;AAEhJA,QAAAA,YAAY,CAACG,eAAb,GAA+BkB,CAAC,CAACC,MAAF,CAASC,KAAxC;AACA,aAAKX,QAAL,CAAc;AAACZ,UAAAA;AAAD,SAAd;AACD,OAJD;AAII,MAAA,QAAQ,EAAC,MAJb;AAIoB,MAAA,SAAS,EAAC,IAJ9B;AAImC,MAAA,SAAS,EAAC,IAJ7C;AAKA,MAAA,MAAM,EAAGqB,CAAD,IAAK;AAAA,YACNf,qBADM,GACmB,KAAKR,KADxB,CACNQ,qBADM;;AAEX,YAAIe,CAAC,CAACC,MAAF,CAASC,KAAT,IAAkB,EAAtB,EACE;AACE,eAAKX,QAAL,CAAc;AAACN,YAAAA,qBAAqB,EAAE;AAAxB,WAAd;AACD,SAHH,MAGQ;AACJ,eAAKM,QAAL,CAAc;AAACN,YAAAA,qBAAqB,EAAE,KAAxB;AAA+BP,YAAAA,aAAa,EAAE;AAA9C,WAAd;AACD;AACF,OAbH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CADF,CAnDF,EA0EI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AAAoC,MAAA,OAAO,EAAE,KAAKe,UAAL,CAAgBU,IAAhB,CAAqB,IAArB,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,eAAD;AAAiB,MAAA,SAAS,EAAC,MAA3B;AAAkC,MAAA,IAAI,EAAC,UAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,YADF,CADH,CA1EJ,CADJ,CAFJ,CADJ,CAFJ,CAHJ,CAFF;AAmGK;;AArLiC;;AAwLxC,eAAejC,gBAAf","sourcesContent":["import React, {Component, Fragment} from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\nimport { withRouter } from 'react-router';\r\nimport axios from  'axios';\r\nimport AlertaSatisfactoria from '../../componentes/AlertaSatisfactoria';\r\nimport AlertaError from '../../componentes/AlertaError';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nclass RegistrarUsuario extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    const token = localStorage.getItem(\"token\");\r\n    let loggedIn = true;\r\n    if (token==null){\r\n      loggedIn = false;\r\n    }\r\n    this.state = {\r\n      alert_message:'',\r\n      datosUsuario: {\r\n        Email: '',\r\n        Password: '',\r\n        ConfirmPassword: ''\r\n      },\r\n      loggedIn,\r\n      isNullEmail: true,\r\n      isNullPassword: true,\r\n      isNullComfirmPassword: true\r\n    }\r\n  }\r\n  ingresoUsuario()\r\n  {\r\n\r\n      axios.post('https://localhost:44328/api/Usuarios/Ingresar', this.state.datosUsuario).then((response)=>{\r\n      //Se genera el token\r\n      localStorage.setItem(\"token\", \"jasdajalkcecklwcljekwej\");\r\n      //Se setea que ingreso\r\n      this.setState({\r\n        loggedIn: true,\r\n        alert_message: 'Acceso satisfactorio'\r\n      });\r\n      //Se inicializan la variable editarContactoModal y el objeto de datosEditarContacto\r\n      this.setState({datosUsuario: {\r\n        Email: '',\r\n        Password: '',\r\n        ConfirmPassword: ''\r\n          }});\r\n        });\r\n  }\r\n\r\n   validacionControles() {\r\n\r\n     if (this.state.datosUsuario.Email=='' && this.state.datosUsuario.Password=='' && this.state.datosUsuario.ConfirmPassword=='')\r\n     {\r\n       this.setState({\r\n         alert_message: 'Introduzca los datos que se le solicitan',\r\n         isNullEmail: true,\r\n         isNullPassword: true,\r\n         isNullComfirmPassword: true\r\n       });\r\n       return false;\r\n     }\r\n\r\n\r\n\r\n  }\r\n\r\n  submitForm()\r\n  {\r\n    \r\n          axios.post('https://localhost:44328/api/Usuarios/Registrar', this.state.datosUsuario).then((response)=>{\r\n\r\n          //Se refresca el Table\r\n          this.ingresoUsuario();\r\n          //Se inicializan la variable editarContactoModal y el objeto de datosEditarContacto\r\n\r\n        }).catch(error=>{\r\n            this.setState({\r\n              alert_message: 'Credenciales incorrectas'\r\n            });\r\n      });\r\n\r\n}\r\n\r\nrender(){\r\n  if (this.state.loggedIn===true){\r\n    //Otra forma de hacer redirect\r\n    // this.props.history.push(\"/\")\r\n    //return <Redirect  to=\"/\" />\r\n    window.location.href='/';\r\n  }\r\n  return (\r\n\r\n    <div id=\"cover-caption\">\r\n      <hr/>\r\n        {this.state.alert_message!=\"\"?<AlertaError mensaje={this.state.alert_message} />:null}\r\n        <div id=\"container\" className=\"container\">\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-6 offset-sm-4 text-center\">\r\n                    <h1 className=\"col-sm-6 display-5  my-4\">Registrar</h1>\r\n                    <div className=\"info-form\">\r\n                        <form action=\"\" className=\"form-inlin justify-content-center\">\r\n\r\n                          <div className=\"form-group\">\r\n                            <div className=\"input-group\">\r\n                              <div className=\"input-group-prepend\">\r\n                                <div className=\"input-group-text bg-white\">\r\n\r\n                                  <i className= {(this.state.isNullEmail?'red-icon':'green-icon')}>  <FontAwesomeIcon className=\"mr-1\" icon=\"user-circle\" /></i>\r\n                                </div>\r\n                              </div>\r\n                              <input type= \"text\" placeholder=\"Usuario\" name=\"nombreUsuario\" value={this.state.datosUsuario.Email} onChange={(e)=>{\r\n                                let {datosUsuario} = this.state;\r\n                                datosUsuario.Email = e.target.value;\r\n                                this.setState({datosUsuario});\r\n                              }} required=\"true\"\r\n                              onBlur={(e)=>{\r\n                                let {isNullEmail} = this.state;\r\n                                if (e.target.value == '')\r\n                                  {\r\n                                    this.setState({isNullEmail: true});\r\n                                  }else {\r\n                                    this.setState({isNullEmail: false, alert_message: ''});\r\n                                  }\r\n                                }} />\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div className=\"form-group\">\r\n                            <div className=\"input-group\">\r\n                               <div className=\"input-group-prepend\">\r\n                                 <div className=\"input-group-text bg-white\">\r\n                                   <i className= {(this.state.isNullPassword?'red-icon':'green-icon')}>  <FontAwesomeIcon className=\"mr-1\" icon=\"key\" /></i>\r\n                                 </div>\r\n                               </div>\r\n                                <input  type= \"password\" placeholder=\"Password\" name=\"password\" value={this.state.datosUsuario.Password} onChange={(e)=>{\r\n                                  let {datosUsuario} = this.state;\r\n                                  datosUsuario.Password = e.target.value;\r\n                                  this.setState({datosUsuario});\r\n                                }}  required=\"true\" maxlength=\"10\" minlength=\"10\"\r\n                                onBlur={(e)=>{\r\n                                  let {isNullPassword} = this.state;\r\n                                  if (e.target.value == '')\r\n                                    {\r\n                                      this.setState({isNullPassword: true});\r\n                                    }else {\r\n                                      this.setState({isNullPassword: false, alert_message: ''});\r\n                                    }\r\n                                  }}/>\r\n                              </div>\r\n                          </div>\r\n\r\n                          <div className=\"form-group\">\r\n                            <div className=\"input-group\">\r\n                               <div className=\"input-group-prepend\">\r\n                                 <div className=\"input-group-text bg-white\">\r\n                                   <i className= {(this.state.isNullComfirmPassword?'red-icon':'green-icon')}>  <FontAwesomeIcon className=\"mr-1\" icon=\"key\" /></i>\r\n                                 </div>\r\n                               </div>\r\n                                <input  type= \"password\" placeholder=\"Confirmar password\" name=\"confirmarPassword\" value={this.state.datosUsuario.ConfirmPassword} onChange={(e)=>{\r\n                                  let {datosUsuario} = this.state;\r\n                                  datosUsuario.ConfirmPassword = e.target.value;\r\n                                  this.setState({datosUsuario});\r\n                                }}  required=\"true\" maxlength=\"10\" minlength=\"10\"\r\n                                onBlur={(e)=>{\r\n                                  let {isNullComfirmPassword} = this.state;\r\n                                  if (e.target.value == '')\r\n                                    {\r\n                                      this.setState({isNullComfirmPassword: true});\r\n                                    }else {\r\n                                      this.setState({isNullComfirmPassword: false, alert_message: ''});\r\n                                    }\r\n                                  }}/>\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                               <div className=\"col-sm-6\">\r\n                                 <button className=\"btn btn-success\" onClick={this.submitForm.bind(this)}>\r\n                                   <FontAwesomeIcon className=\"mr-1\" icon=\"database\" />\r\n                                   Guardar</button>\r\n                              </div>\r\n                            </div>\r\n                        </form>\r\n                      </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )\r\n      }\r\n}\r\n\r\nexport default RegistrarUsuario;\r\n"]},"metadata":{},"sourceType":"module"}