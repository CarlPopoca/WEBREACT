{"version":3,"sources":["componentes/AlertaError.js","componentes/seguridad/IniciarSesion.js","componentes/seguridad/CerrarSesion.js","componentes/seguridad/RegistrarUsuario.js","componentes/Contactos.js","componentes/NavMenu.js","componentes/Home.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["AlertaError","props","class","role","this","mensaje","Component","IniciarSesion","loggedIn","localStorage","getItem","state","loading","alert_message","datosUsuario","Email","Password","RemenberMe","isNullEmail","isNullPassword","setState","length","validacionControles","axios","post","then","response","setItem","catch","error","e","to","id","className","validacionBoton","icon","type","target","value","placeholder","name","onChange","required","maxlength","minlength","onBlur","htmlFor","onClick","submitForm","bind","spin","CerrarSesion","Salir","removeItem","RegistrarUsuario","ConfirmPassword","isNullComfirmPassword","ingresoUsuario","Contactos","contactos","isError","isNullNombre","isNullCelular","isNullSexo","datosNuevoContacto","Nombre","Celular","Sexo","datosEditarContacto","Id","nuevoContactoModal","editarContactoModal","refrescarContactos","borderColor","contacto","nombre","celular","sexo","alert","valAlert","valContacto","validarContacto","push","data","put","confirmAlert","customUI","onClose","Button","color","size","delete","get","contactosReg","map","key","editarContacto","eliminarContacto","toggleNuevoContactoModal","Modal","isOpen","toggle","ModalHeader","ModalBody","FormGroup","Label","for","Input","style","validacionInput","onKeyUp","replace","ModalFooter","agregarContacto","toggleEditarContactoModal","actualizarContacto","Table","NavMenu","changeNavItem","location","pathname","nextProps","currentRoute","letLogout","NavItem","letLogin","Navbar","collapseOnSelect","expand","bg","variant","Toggle","aria-controls","Collapse","Nav","pills","withRouter","Home","App","isLoading","library","add","fab","faCheckSquare","faCoffee","faTrashAlt","faExclamationTriangle","faTimes","faCheck","faUserCircle","faKey","faSignInAlt","faDatabase","faSyncAlt","src","logo","alt","exact","path","component","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker","module","exports"],"mappings":"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","file":"static/js/main.12f776db.chunk.js","sourcesContent":["import React, {Component} from 'react'\r\n\r\nexport default class AlertaError extends Component{\r\n  constructor(props){\r\n    super(props);\r\n\r\n  }\r\n  render()\r\n  {\r\n    return (\r\n      <div class=\"alert alert-danger\" role=\"alert\">\r\n        {this.props.mensaje}\r\n    </div>\r\n    );\r\n  }\r\n}\r\n","import React, {Component, Fragment} from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\nimport axios from 'axios';\r\nimport AlertaError from '../AlertaError';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nclass IniciarSesion extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    const token = localStorage.getItem(\"token\");\r\n    let loggedIn = true;\r\n    if (token==null){\r\n      loggedIn = false;\r\n    }\r\n    this.state = {\r\n      loading: false,\r\n      alert_message:'',\r\n      datosUsuario: {\r\n        Email: '',\r\n        Password: '',\r\n        RemenberMe: false\r\n      },\r\n      loggedIn,\r\n      isNullEmail: '',\r\n      isNullPassword: ''\r\n    }\r\n  }\r\n  validacionControles() {\r\n    if (this.state.datosUsuario.Email=='' && this.state.datosUsuario.Password=='')\r\n    {\r\n      this.setState({\r\n        alert_message: 'Introduzca el usuario y el password',\r\n        isNullEmail: 'true',\r\n        isNullPassword: 'true'\r\n      });\r\n      return false;\r\n    }\r\n    if (this.state.datosUsuario.Password.length < 10)\r\n    {\r\n      this.setState({\r\n        alert_message: 'El password debe tener diez caracteres',\r\n        isNullPassword: 'true',\r\n      });\r\n       return false;\r\n    }\r\n    return  true;\r\n  }\r\n\r\n  submitForm()\r\n  {\r\n    let valControles = this.validacionControles();\r\n    if (valControles){\r\n      this.setState({\r\n        loading: true\r\n      });\r\n      axios.post('https://localhost:44328/api/Usuarios/Ingresar', this.state.datosUsuario).then((response)=>{\r\n        //Se genera el token\r\n        localStorage.setItem(\"token\", \"jasdajalkcecklwcljekwej\");\r\n        //Se setea que ingreso\r\n        this.setState({\r\n          loading: false,\r\n          loggedIn: true,\r\n          alert_message: '',\r\n          datosUsuario: {\r\n            Email: '',\r\n            Password: '',\r\n            RemenberMe: false\r\n              }\r\n        });\r\n        }).catch(error=>{\r\n\r\n            this.setState({\r\n              alert_message: 'Credenciales incorrectas',\r\n              loading: false\r\n            });\r\n      });\r\n    }\r\n}\r\n\r\nvalidacionBoton(e){\r\n  if (e == 'true'){\r\n    return 'red-icon'\r\n  }\r\n  if (e == 'false'){\r\n    return 'green-icon'\r\n  }\r\n  return '';\r\n}\r\n\r\n  render(){\r\n    const {loading} = this.state;\r\n    if (this.state.loggedIn===true){\r\n      //Otra forma de hacer redirect\r\n      // this.props.history.push(\"/\")\r\n      return <Redirect  to=\"/\" />\r\n      //  window.location.href='/';\r\n    }\r\n    return (\r\n      <div id=\"cover-caption\">\r\n          {this.state.alert_message!=\"\"?<AlertaError mensaje={this.state.alert_message} />:null}\r\n          <div id=\"container\" className=\"container\">\r\n              <div className=\"row\">\r\n                  <div className=\"col-sm-6 offset-sm-4 text-center\">\r\n                    <h1 className=\"col-sm-7 display-5  my-4\">Iniciar sesión</h1>\r\n                    <div className=\"info-form col-sm-7\">\r\n                            <div className=\"form-group\">\r\n                              <div className=\"input-group\">\r\n                                <div className=\"input-group-prepend\">\r\n                                  <div className=\"input-group-text bg-white\">\r\n                                    <i className= {this.validacionBoton(this.state.isNullEmail)}>  <FontAwesomeIcon className=\"mr-1\" icon=\"user-circle\" /></i>\r\n                                  </div>\r\n                                </div>\r\n                                <input type=\"email\" className=\"form-control\" type= \"text\" placeholder=\"Usuario\" name=\"Email\" value={this.state.datosUsuario.Email} onChange={(e)=>{\r\n                                    let {datosUsuario} = this.state;\r\n                                    datosUsuario.Email = e.target.value;\r\n                                    this.setState({datosUsuario});\r\n                                  }} required=\"true\" onBlur={(e)=>{\r\n                                    let {isNullEmail} = this.state;\r\n                                    if (e.target.value == '')\r\n                                      {\r\n                                        this.setState({isNullEmail: 'true'});\r\n                                      }else {\r\n                                        this.setState({isNullEmail: 'false', alert_message: ''});\r\n                                      }\r\n                                    }}/>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"form-group\">\r\n                            <div className=\"input-group\">\r\n                               <div className=\"input-group-prepend\">\r\n                                 <div className=\"input-group-text bg-white\">\r\n                                   <i className= {this.validacionBoton(this.state.isNullPassword)}>  <FontAwesomeIcon className=\"mr-1\" icon=\"key\" /></i>\r\n                                 </div>\r\n                               </div>\r\n                                <input  className=\"form-control\" type= \"password\" placeholder=\"Password\" name=\"Password\" value={this.state.datosUsuario.Password} onChange={(e)=>{\r\n                                    let {datosUsuario} = this.state;\r\n                                    datosUsuario.Password = e.target.value;\r\n                                    this.setState({datosUsuario});\r\n                                  }}  required=\"true\" maxlength=\"10\" minlength=\"10\" onBlur={(e)=>{\r\n                                    let {isNullPassword} = this.state;\r\n                                    if (e.target.value == '')\r\n                                      {\r\n                                        this.setState({isNullPassword: 'true'});\r\n                                      }else {\r\n                                        this.setState({isNullPassword: 'false', alert_message: ''});\r\n                                      }\r\n                                    }}/>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"form-group\">\r\n                            <div className=\"input-group\">\r\n                              <div className=\"form-check\">\r\n                                <input type=\"checkbox\" name=\"RemenberMe\"\r\n                                   className=\"form-check-input\" value={this.state.datosUsuario.RemenberMe} onChange={(e)=>{\r\n                                       let {datosUsuario} = this.state;\r\n                                       datosUsuario.RemenberMe = e.target.value;\r\n                                       this.setState({datosUsuario});\r\n                                   }}/>\r\n                                   <label htmlFor=\"RemenberMe\" className=\"form-check-label\">Recordar sesión</label>\r\n                              </div>\r\n                          </div>\r\n                        </div>\r\n                         <div className=\"form-group\">\r\n                             <button className=\"btn btn-success\" onClick={this.submitForm.bind(this)}>\r\n                               {loading?<FontAwesomeIcon className=\"mr-2\" icon=\"sync-alt\" spin />: <FontAwesomeIcon className=\"mr-2\" icon=\"sign-in-alt\" />}\r\n                               Ingresar</button>\r\n                        </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n      )\r\n    }\r\n}\r\n\r\nexport default IniciarSesion;\r\n","import React, {Component} from 'react';\r\nimport { Link, Redirect} from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport AlertaError from '../../componentes/AlertaError';\r\n\r\nclass CerrarSesion extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    const token = localStorage.getItem(\"token\");\r\n    let loggedIn = true;\r\n    if (token==null){\r\n      loggedIn = false;\r\n    }\r\n    this.state = {\r\n      alert_message:'',\r\n      loggedIn\r\n    }\r\n    this.Salir();\r\n  }\r\n  Salir()\r\n  {\r\n    axios.post('https://localhost:44328/api/Usuarios/CerrarSesion').then((response)=>{\r\n          localStorage.removeItem(\"token\");\r\n          this.setState({\r\n            loggedIn: false\r\n          });\r\n      }).catch(error=>{\r\n\r\n          this.setState({\r\n            alert_message: 'Hubo un error al cerrar la sesión'\r\n          });\r\n        });\r\n }\r\n  render(){\r\n      // this.props.history.push(\"/\")\r\n      if (!this.state.loggedIn)\r\n      return <Redirect  to=\"/\" />\r\n      //  window.location.href='/';\r\n      return (\r\n        <div id=\"cover-caption\">\r\n          <hr/>\r\n            {this.state.alert_message!=\"\"?<AlertaError mensaje={this.state.alert_message} />:null}\r\n        </div>\r\n      )\r\n  }\r\n}\r\n\r\nexport default CerrarSesion;\r\n","import React, {Component, Fragment} from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\nimport axios from  'axios';\r\nimport AlertaError from '../../componentes/AlertaError';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nclass RegistrarUsuario extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    const token = localStorage.getItem(\"token\");\r\n    let loggedIn = true;\r\n    if (token==null){\r\n      loggedIn = false;\r\n    }\r\n    this.state = {\r\n      loading: false,\r\n      alert_message:'',\r\n      datosUsuario: {\r\n        Email: '',\r\n        Password: '',\r\n        ConfirmPassword: ''\r\n      },\r\n      loggedIn,\r\n      isNullEmail: '',\r\n      isNullPassword: '',\r\n      isNullComfirmPassword: ''\r\n    }\r\n  }\r\n  ingresoUsuario()\r\n  {\r\n      axios.post('https://localhost:44328/api/Usuarios/Ingresar', this.state.datosUsuario).then((response)=>{\r\n      //Se genera el token\r\n      localStorage.setItem(\"token\", \"jasdajalkcecklwcljekwej\");\r\n      //Se setea que ingreso\r\n      this.setState({\r\n        loggedIn: true,\r\n        alert_message: '',\r\n        datosUsuario: {\r\n          Email: '',\r\n          Password: '',\r\n          ConfirmPassword: ''\r\n            }\r\n        });\r\n      }).catch(error=>{\r\n          this.setState({\r\n            alert_message: 'El usuario no pudo ingresar'\r\n          });\r\n    });\r\n  }\r\n\r\n   validacionControles() {\r\n     if (this.state.datosUsuario.Email=='' && this.state.datosUsuario.Password=='' && this.state.datosUsuario.ConfirmPassword=='')\r\n     {\r\n       this.setState({\r\n         alert_message: 'Introduzca los datos que se le solicitan',\r\n         isNullEmail: 'true',\r\n         isNullPassword: 'true',\r\n         isNullComfirmPassword: 'true'\r\n       });\r\n       return false;\r\n     }\r\n\r\n     if (this.state.datosUsuario.Password.length < 10)\r\n     {\r\n       this.setState({\r\n         alert_message: 'El password debe tener diez caracteres',\r\n         isNullPassword: 'true',\r\n       });\r\n        return false;\r\n     }\r\n    if (this.state.datosUsuario.ConfirmPassword.length < 10)\r\n    {\r\n      this.setState({\r\n        alert_message: 'La confirmación del password debe tener diez caracteres',\r\n        isNullComfirmPassword: 'true',\r\n      });\r\n       return false;\r\n    }\r\n    if (this.state.datosUsuario.Password != this.state.datosUsuario.ConfirmPassword)\r\n    {\r\n      this.setState({\r\n        alert_message: 'El password y la confirmación del password deben ser indenticos',\r\n        isNullPassword: 'true',\r\n        isNullComfirmPassword: 'true'\r\n      });\r\n      return false;\r\n    }\r\n     return true;\r\n  }\r\n\r\n  submitForm()\r\n  {\r\n    let valControles = this.validacionControles();\r\n    if (valControles){\r\n      this.setState({\r\n        loading: true\r\n      });\r\n      axios.post('https://localhost:44328/api/Usuarios/Registrar', this.state.datosUsuario).then((response)=>{\r\n          this.ingresoUsuario();\r\n          this.setState({\r\n            loading: false});\r\n      }).catch(error=>{\r\n            this.setState({\r\n              loading: false,\r\n              alert_message: 'No se pudo registrar el usuario'\r\n          });\r\n      });\r\n    }\r\n}\r\n\r\nvalidacionBoton(e){\r\n  if (e == 'true'){\r\n    return 'red-icon'\r\n  }\r\n  if (e == 'false'){\r\n    return 'green-icon'\r\n  }\r\n  return '';\r\n}\r\n\r\nrender(){\r\n  const {loading} = this.state;\r\n  if (this.state.loggedIn===true){\r\n    //Otra forma de hacer redirect\r\n    // this.props.history.push(\"/\")\r\n    return <Redirect  to=\"/\" />\r\n  }\r\n  return (\r\n    <div id=\"cover-caption\">\r\n        {this.state.alert_message!=\"\"?<AlertaError mensaje={this.state.alert_message} />:null}\r\n        <div id=\"container\" className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-6 offset-sm-4 text-center\">\r\n                    <h1 className=\"col-sm-7 display-5  my-4\">Registrar</h1>\r\n                    <div className=\"info-form col-sm-7\">\r\n                          <div className=\"form-group\">\r\n                            <div className=\"input-group\">\r\n                              <div className=\"input-group-prepend\">\r\n                                <div className=\"input-group-text bg-white\">\r\n                                  <i className= {this.validacionBoton(this.state.isNullEmail)}>  <FontAwesomeIcon className=\"mr-1\" icon=\"user-circle\" /></i>\r\n                                </div>\r\n                              </div>\r\n                              <input type=\"email\" className=\"form-control\" type= \"text\" placeholder=\"Usuario\" name=\"nombreUsuario\" value={this.state.datosUsuario.Email} onChange={(e)=>{\r\n                                let {datosUsuario} = this.state;\r\n                                datosUsuario.Email = e.target.value;\r\n                                this.setState({datosUsuario});\r\n                              }} required=\"true\"\r\n                              onBlur={(e)=>{\r\n                                let {isNullEmail} = this.state;\r\n                                if (e.target.value == '')\r\n                                  {\r\n                                    this.setState({isNullEmail: 'true'});\r\n                                  }else {\r\n                                    this.setState({isNullEmail: 'false', alert_message: ''});\r\n                                  }\r\n                                }} />\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div className=\"form-group\">\r\n                            <div className=\"input-group\">\r\n                               <div className=\"input-group-prepend\">\r\n                                 <div className=\"input-group-text bg-white\">\r\n                                   <i className= {this.validacionBoton(this.state.isNullPassword)}>  <FontAwesomeIcon className=\"mr-1\" icon=\"key\" /></i>\r\n                                 </div>\r\n                               </div>\r\n                                <input className=\"form-control\" type= \"password\" placeholder=\"Password\" name=\"password\" value={this.state.datosUsuario.Password} onChange={(e)=>{\r\n                                  let {datosUsuario} = this.state;\r\n                                  datosUsuario.Password = e.target.value;\r\n                                  this.setState({datosUsuario});\r\n                                }}  required=\"true\" maxlength=\"10\" minlength=\"10\"\r\n                                onBlur={(e)=>{\r\n                                  let {isNullPassword} = this.state;\r\n                                  if (e.target.value == '')\r\n                                    {\r\n                                      this.setState({isNullPassword: 'true'});\r\n                                    }else {\r\n                                      this.setState({isNullPassword: 'false', alert_message: ''});\r\n                                    }\r\n                                  }}/>\r\n                              </div>\r\n                          </div>\r\n\r\n                          <div className=\"form-group\">\r\n                            <div className=\"input-group\">\r\n                               <div className=\"input-group-prepend\">\r\n                                 <div className=\"input-group-text bg-white\">\r\n                                   <i className= {this.validacionBoton(this.state.isNullComfirmPassword)}>  <FontAwesomeIcon className=\"mr-1\" icon=\"key\" /></i>\r\n                                 </div>\r\n                               </div>\r\n                                <input className=\"form-control\" type= \"password\" placeholder=\"Confirmar password\" name=\"confirmarPassword\" value={this.state.datosUsuario.ConfirmPassword} onChange={(e)=>{\r\n                                  let {datosUsuario} = this.state;\r\n                                  datosUsuario.ConfirmPassword = e.target.value;\r\n                                  this.setState({datosUsuario});\r\n                                }}  required=\"true\" maxlength=\"10\" minlength=\"10\"\r\n                                onBlur={(e)=>{\r\n                                  let {isNullComfirmPassword} = this.state;\r\n                                  if (e.target.value == '')\r\n                                    {\r\n                                      this.setState({isNullComfirmPassword: 'true'});\r\n                                    }else {\r\n                                      this.setState({isNullComfirmPassword: 'false', alert_message: ''});\r\n                                    }\r\n                                  }}/>\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                 <button className=\"btn btn-success\" onClick={this.submitForm.bind(this)}>\r\n                                 {loading?<FontAwesomeIcon className=\"mr-2\" icon=\"sync-alt\" spin />: <FontAwesomeIcon className=\"mr-2\" icon=\"database\" />}\r\n                                   Guardar</button>\r\n                            </div>\r\n                      </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )\r\n      }\r\n}\r\n\r\nexport default RegistrarUsuario;\r\n","import React, {Component} from 'react';\r\nimport {Label, FormGroup, Input, Modal, ModalHeader, ModalBody, ModalFooter, Table, Button} from 'reactstrap';\r\nimport { Link, Redirect} from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport AlertaError from './AlertaError';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\n\r\n/*import Navegacion from './Navegacion';*/\r\n//Una Clase que extiende del component de React se comvierte en una etiqueta html\r\nclass Contactos extends Component  {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    const token = localStorage.getItem(\"token\");\r\n    let loggedIn = true;\r\n    if (token==null){\r\n      loggedIn = false;\r\n    }\r\n    this.state = {\r\n    loading: false,\r\n    contactos: [],\r\n\t\tisError:'',\r\n\t\tisNullNombre: '',\r\n\t\tisNullCelular: '',\r\n\t\tisNullSexo: '',\r\n\t\talert_message:'',\r\n\t\tdatosNuevoContacto: {\r\n        Nombre: '',\r\n        Celular: '',\r\n        Sexo: ''\r\n      },\r\n      datosEditarContacto: {\r\n        Id: '',\r\n        Nombre: '',\r\n        Celular: '',\r\n        Sexo: ''\r\n      },\r\n      nuevoContactoModal: false,\r\n      editarContactoModal: false,\r\n      loggedIn\r\n    }\r\n  }\r\n  //Se declara en el objeto state las variables que mantendran el valor\r\n  //Contactos - Los datos que llenaran el Table\r\n  //datosNuevoContacto - Los datos para la Alta\r\n  //datosEditarContacto - Los datos para la modificación\r\n  //nuevoContactoModal - Para la visualización y cierre de la ventana modal de Alta\r\n //editarContactoModal - Para la visualización  y cierre de la ventana modal de modificación\r\n\r\n //Método que refrescara el Table\r\n  \r\n  componentWillMount(){\r\n    this.refrescarContactos();\r\n  }\r\n//Método que niega el valor de la variable nuevoContactoModal inicializada en false, esto\r\n//permite mostrar el Modal para la Alta y inicializa los datos del objeto datosNuevoContacto, y\r\n//Se regresa el valor de la variable nuevoContactoModal a false cuando se pulsa el botón de cerrar y\r\n//cuando se pulsa el botón de cancelar\r\n  toggleNuevoContactoModal() {\r\n    this.setState({\r\n\t  isError:'',\r\n      isNullNombre:'',\r\n      isNullCelular:'',\r\n      isNullSexo:'',\r\n      alert_message:'',\r\n\t  nuevoContactoModal: !this.state.nuevoContactoModal,\r\n      datosNuevoContacto: {\r\n        Nombre: '',\r\n        Celular: '',\r\n        Sexo: ''\r\n      }\r\n    });\r\n  }\r\n  //Método que niega el valor de la variable editarContactoModal inicializada en false, esto\r\n  //permite mostrar el Modal para la Modificación y\r\n  //se regresa el valor de la variable editarContactoModal a false cuando se pulsa el botón de cerrar y\r\n  //cuando se pulsa el botón de cancelar\r\n  toggleEditarContactoModal() {\r\n    //Este metodo se dispara cuando se cierra la ventana modal de editar, y cuando se pulsa el botón de Cancelar\r\n    // convierte el valor de la variable editarContactoModal a false\r\n  this.setState({\r\n    editarContactoModal: !this.state.editarContactoModal\r\n  });\r\n}\r\nvalidacionInput(e){\r\n\r\n  if (e === 'true'){\r\n    return {borderColor: '#dc3545'}\r\n  }\r\n  if (e === 'false'){\r\n    return  {borderColor: '#28a745'}\r\n  }\r\n  return  {borderColor: 'none'};\r\n}\r\n\r\nvalidarContacto(contacto) {\r\n  var nombre='false', celular='false', sexo='false', alert='', valAlert=false, valContacto= true;\r\n\r\n  if (contacto.Nombre ==='')\r\n  {\r\n    nombre ='true';\r\n    valAlert=true;\r\n  }\r\n\r\n  if (contacto.Celular ==='')\r\n  {\r\n    celular = 'true';\r\n    valAlert=true;\r\n  }\r\n\r\n  if (contacto.Sexo ==='')\r\n  {\r\n    sexo = 'true';\r\n    valAlert=true;\r\n  }\r\n\r\n  if (valAlert) {\r\n    alert = 'Introduzca la información que se le solicita'\r\n    valContacto = false;\r\n  }\r\n  this.setState({\r\n    isError:'',\r\n    isNullNombre: nombre,\r\n    isNullCelular: celular,\r\n    isNullSexo: sexo,\r\n    alert_message: alert\r\n  });\r\n\r\n  return valContacto;\r\n}\r\n//Método que permite guardar los datos capturados en el modal de Alta\r\n  agregarContacto (){\r\n\tif (this.validarContacto(this.state.datosNuevoContacto)) {\r\n    this.setState({loading: true\r\n    });\r\n\t\taxios.post('https://localhost:44386/api/Contactos', this.state.datosNuevoContacto).then((response)=>{\r\n\t\t//Se setea la variable de state contactos, los simbolo {} permiten usarla para setearla por medio de let\r\n\t\t//this.state contiene los contactos que se renderizaron en el Table\r\n\t\t  let {contactos} = this.state;\r\n\t\t  //Se agrega al final el contacto que devolvio el metodo post de la api contactos\r\n\t\t  contactos.push(response.data);\r\n\t\t  //Inicializa el estado de las variables nuevoContactoModal y el objeto datosNuevoContacto\r\n\t\t  this.setState({loading: false, contactos, nuevoContactoModal:false, datosNuevoContacto: {\r\n\t\t\tNombre: '',\r\n\t\t\tCelular: '',\r\n\t\t\tSexo: ''\r\n\t\t  }});\r\n\t\t}).catch(error=>{\r\n        //entra cuando los errores se propagan desde la base de datos, por ejemplo cuando la logitud de un\r\n        //  es superior al campo de la base de datos\r\n        this.setState({\r\n          loading: false,\r\n          isError:'true',\r\n          alert_message: 'No se pudo agregar el contacto'\r\n        });\r\n      });\r\n\t   }\r\n  }\r\n\r\n//Método que permite guardar los datos capturados en el modal de Modificación\r\n  actualizarContacto()\r\n  {\r\n    let {Id, Nombre, Celular, Sexo} = this.state.datosEditarContacto;\r\n\t  if (this.validarContacto(this.state.datosEditarContacto)) {\r\n      this.setState({\r\n        loading: true\r\n      });\r\n\t\t  axios.put('https://localhost:44386/api/Contactos/' + this.state.datosEditarContacto.Id, {\r\n\t\t  Id, Nombre, Celular, Sexo\r\n\t\t\t}).then((response)=>{\r\n\t\t  //Se refresca el Table\r\n  \t\t  this.refrescarContactos();\r\n  \t\t  //Se inicializan la variable editarContactoModal y el objeto de datosEditarContacto\r\n  \t\t  this.setState({loading: false, editarContactoModal: false, datosEditarContacto: {\r\n  \t\t\t\tId: '',\r\n  \t\t\t\tNombre: '',\r\n  \t\t\t\tCelular: '',\r\n  \t\t\t\tSexo: ''\r\n  \t\t\t}});\r\n\t\t   }).catch(error=>{\r\n        //entra cuando los errores se propagan desde la base de datos, por ejemplo cuando la logitud de un\r\n        //  es superior al campo de la base de datos\r\n        this.setState({\r\n          loading: false,\r\n          isError:'true',\r\n          alert_message: 'No se pudo actualizar el contacto'\r\n        });\r\n      });\r\n\t  }\r\n  }\r\n\r\n//Método para eliminar un Contacto\r\n eliminarContacto(id){\r\n   var item = false;\r\n   confirmAlert({\r\n    customUI:({ onClose }) => {\r\n      var loading = false;\r\n      return (\r\n        <div className='custom-ui'>\r\n          <h1 className=\"glyphicon glyphicon-warning-sign\">\r\n            <FontAwesomeIcon className=\"mr-3\" icon=\"exclamation-triangle\" />\r\n            Esta seguro de eliminar el registro?</h1>\r\n          <div className=\"btn-toolbar row\" role=\"toolbar\">\r\n            <div className=\"col-sm-4\"></div>\r\n          <div className=\"btn-group col-sm-4\">\r\n              <Button color=\"secondary\" size=\"sm\" className=\"mr-3\" onClick={onClose}>\r\n                  <FontAwesomeIcon className=\"mr-2\" icon=\"times\" />\r\n                  No\r\n               </Button>\r\n              <Button color=\"primary\" size=\"sm\" className=\"btn btn-default \"\r\n                onClick={() => {\r\n                  item = true;\r\n                  axios.delete('https://localhost:44386/api/Contactos/'+id).then((response)=>{\r\n                  this.refrescarContactos();\r\n                  onClose();  \r\n            \r\n                }).catch(error=>{\r\n                  //entra cuando los errores se propagan desde la base de datos, por ejemplo cuando la logitud de un\r\n                  //  es superior al campo de la base de datos\r\n                    this.setState({\r\n                      isError: 'true',\r\n                      alert_message: 'No se pudo eliminar el contacto'\r\n                    });\r\n                  })\r\n                }}\r\n              >\r\n                <FontAwesomeIcon className=\"mr-2\" icon=\"check\" />\r\n                Si\r\n              </Button>\r\n              </div>\r\n              <div className=\"col-sm-4\"></div>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n    });\r\n }\r\n refrescarContactos(){\r\n    axios.get('https://localhost:44386/api/Contactos').then((response)=>{\r\n      this.setState({\r\n        contactos: response.data\r\n      })\r\n    }).catch(error=>{\r\n      //entra cuando los errores se propagan desde la base de datos, por ejemplo cuando la logitud de un\r\n      //  es superior al campo de la base de datos\r\n      this.setState({\r\n        alert_message: 'Error al obtener los contactos'\r\n      });\r\n    });\r\n  }\r\n\r\n  //Nota: this.state mantiene el estado de las variables, es como un get pero para setear una  variables\r\n  // se debe ocupar\r\n  //Método para actualizar los datos\r\n  editarContacto (Id, Nombre, Celular, Sexo)\r\n  {\r\n    //Por default la variable editarContactoModal es false pero se niega este valor seteando a verdadero,\r\n    // y de esta manera se consigue visualizar el modal de mdificación y setearle los datos a los controles\r\n\tthis.validarContacto({Id, Nombre, Celular, Sexo});\r\n    this.setState({\r\n     datosEditarContacto: {Id, Nombre, Celular, Sexo}, editarContactoModal:! this.state.editarContactoModal\r\n   });\r\n  }\r\n\r\n  validacionControles()\r\n  {\r\n    if (((this.state.isNullNombre ==='true'||this.state.isNullCelular ==='true'||this.state.isNullSexo ==='true') && (this.state.alert_message!='')) ||(this.state.isError=== 'true'))\r\n      return true;\r\n    else\r\n      return false;\r\n  }\r\n\r\n  render(){\r\n    const {loading} = this.state;\r\n    if(this.state.loggedIn==false)\r\n    {\r\n      return <Redirect  to=\"/\" />\r\n    }\r\n    //Se setea a la variable local contactosReg el objeto contactos que se lleno al ejecutarse el método\r\n    //componentWillMount en automatico y se retorna las filas del Table más una columna con los botones de\r\n    //Editar y eliminar\r\n    let contactosReg = this.state.contactos.map((contacto)=>{\r\n      return(\r\n        <tr key={contacto.Id}>\r\n          <td>{contacto.Id}</td>\r\n          <td>{contacto.Nombre}</td>\r\n          <td> {contacto.Celular}</td>\r\n          <td> {contacto.Sexo}</td>\r\n          <td>\r\n            <Button color=\"success\" size=\"sm\" className=\"mr-2\" onClick={this.editarContacto.bind(this, contacto.Id, contacto.Nombre, contacto.Celular, contacto.Sexo)}>Editar</Button>\r\n            <Button color=\"danger\" size=\"sm\" onClick={this.eliminarContacto.bind(this,contacto.Id)}>Eliminar</Button>\r\n          </td>\r\n        </tr>\r\n      )\r\n    });\r\n    // El botón Agregar cambia a true la variable nuevoContactoModal por medio del metodo toggleNuevoContactoModal\r\n\r\n    //Modal para modificar datos se abre en automatico cuando su atributo isOpen cambia a verdadero por medio de la variable nuevoContactoModal\r\n    //y se cierra cuando la misma variable cambia a false al presionarse los botones cerrar (x) y cancelar\r\n\r\n    //Modal para modificar datos  se abre en automatico cuando su atributo isOpen cambia a verdadero por medio de la variable editarContactoModal\r\n    //y se cierra cuando la misma variable cambia a false al presionarse los botones de cerrar (x) y cancelar\r\n\r\n    //ModalHeader: Encabezado del Modal\r\n    //ModalBody: Contenedor de controles\r\n    //ModalFooter:  Pie del Modal, se utiliza comunmente para añadir botones\r\n\r\n    //FormGroup: Agrupador de Controles\r\n    //Input propiedad value : se le puede ligar una propiedad de un objeto state, y con el método onChange asignarle\r\n    //al value lo que se captura.\r\n    // let {datosNuevoContacto} = this.state;,  se setea el estado y se almacena lo que se captura\r\n    // datosNuevoContacto.Nombre = e.target.value;, se setea lo que se captura en el input en la propiedad que se indica\r\n    // this.setState({datosNuevoContacto});, se confirma el seteo de la propiedad del objeto\r\n\r\n    //<tbody>{contactosReg}</tbody>, la variable local contactosReg proporciona los filas del Table\r\n\t  return (\r\n      <div id=\"divContactos\">\r\n\r\n      <div className=\"App container\">\r\n        <h2>Aplicación de Contactos</h2>\r\n\r\n        <Button  className=\"my-3\" color=\"primary\" onClick={this.toggleNuevoContactoModal.bind(this)}>Agregar</Button>\r\n        <Modal isOpen={this.state.nuevoContactoModal}  toggle={this.toggleNuevoContactoModal.bind(this)}>\r\n          <ModalHeader toggle={this.toggleNuevoContactoModal.bind(this)}>Agregar un Contacto</ModalHeader>\r\n          <ModalBody>\r\n            {this.validacionControles()?<AlertaError mensaje={this.state.alert_message} />:null}\r\n            <FormGroup>\r\n              <Label for=\"Nombre\">Nombre</Label>\r\n            <Input  id=\"Nombre\" style={this.validacionInput(this.state.isNullNombre)} value={this.state.datosNuevoContacto.Nombre} onChange={(e)=>{\r\n                let {datosNuevoContacto} = this.state;\r\n                datosNuevoContacto.Nombre = e.target.value;\r\n                this.setState({datosNuevoContacto});\r\n              }} required=\"true\" maxlength=\"100\" onKeyUp onBlur={(e)=>{\r\n                if (e.target.value == '')\r\n                  {\r\n                    this.setState({isNullNombre: 'true'});\r\n                  }else {\r\n                    this.setState({isNullNombre: 'false'});\r\n                  }\r\n                }}/>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"Celular\">Celular</Label>\r\n              <Input  id=\"Celular\" style={this.validacionInput(this.state.isNullCelular)} value={this.state.datosNuevoContacto.Celular} onChange={(e)=>{\r\n                var regex = /[^+\\d]/g;\r\n                let {datosNuevoContacto} = this.state;\r\n                datosNuevoContacto.Celular = e.target.value.replace(regex,\"\");\r\n                this.setState({datosNuevoContacto});\r\n              }} required = \"true\"  onBlur={(e)=>{\r\n                if (e.target.value == '')\r\n                  {\r\n                    this.setState({isNullCelular: 'true'});\r\n                  }else {\r\n                    this.setState({isNullCelular: 'false'});\r\n                  }\r\n                }}/>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"Sexo\">Sexo</Label>\r\n              <Input  id=\"Sexo\" style={this.validacionInput(this.state.isNullSexo)} value={this.state.datosNuevoContacto.Sexo} onChange={(e)=>{\r\n                let {datosNuevoContacto} = this.state;\r\n                datosNuevoContacto.Sexo = e.target.value;\r\n                this.setState({datosNuevoContacto});\r\n              }} required=\"true\" maxlength=\"3\" minlength=\"3\" onBlur={(e)=>{\r\n                if (e.target.value == '')\r\n                  {\r\n                    this.setState({isNullSexo: 'true'});\r\n                  }else {\r\n                    this.setState({isNullSexo: 'false'});\r\n                  }\r\n                }}/>\r\n            </FormGroup>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button color=\"primary\" onClick={this.agregarContacto.bind(this)}>\r\n              {loading?<FontAwesomeIcon className=\"mr-2\" icon=\"sync-alt\" spin />: <FontAwesomeIcon className=\"mr-2\" icon=\"database\" />}\r\n              Guardar\r\n            </Button>\r\n            <Button color=\"secondary\" onClick={this.toggleNuevoContactoModal.bind(this)}>\r\n              <FontAwesomeIcon className=\"mr-2\" icon=\"times\" />\r\n              Cancelar\r\n            </Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n\r\n        <Modal isOpen={this.state.editarContactoModal}  toggle={this.toggleEditarContactoModal.bind(this)}>\r\n         <ModalHeader toggle={this.toggleEditarContactoModal.bind(this)}>Editar un Contacto</ModalHeader>\r\n         <ModalBody>\r\n           {this.validacionControles()?<AlertaError mensaje={this.state.alert_message} />:null}\r\n          <FormGroup>\r\n            <Label for=\"Nombre\">Nombre</Label>\r\n            <Input  id=\"Nombre\"  style={this.validacionInput(this.state.isNullNombre)} value={this.state.datosEditarContacto.Nombre} onChange={(e)=>{\r\n              let {datosEditarContacto} = this.state;\r\n              datosEditarContacto.Nombre = e.target.value;\r\n              this.setState({datosEditarContacto});\r\n            }} required=\"true\" maxlength=\"100\" onBlur={(e)=>{\r\n              if (e.target.value == '')\r\n                {\r\n                  this.setState({isNullNombre: 'true'});\r\n                }else {\r\n                  this.setState({isNullNombre: 'false'});\r\n                }\r\n              }}/>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"Celular\">Celular</Label>\r\n            <Input  id=\"Celular\" style={this.validacionInput(this.state.isNullCelular)} value={this.state.datosEditarContacto.Celular} onChange={(e)=>{\r\n              var regex = /[^+\\d]/g;\r\n              let {datosEditarContacto} = this.state;\r\n              datosEditarContacto.Celular = e.target.value.replace(regex,\"\");\r\n              this.setState({datosEditarContacto});\r\n            }} required=\"true\" onBlur={(e)=>{\r\n              if (e.target.value == '')\r\n                {\r\n                  this.setState({isNullCelular: 'true'});\r\n                }else {\r\n                  this.setState({isNullCelular: 'false'});\r\n                }\r\n              }}/>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"Sexo\">Sexo</Label>\r\n          <Input  id=\"Sexo\" style={this.validacionInput(this.state.isNullSexo)} value={this.state.datosEditarContacto.Sexo} onChange={(e)=>{\r\n              let {datosEditarContacto} = this.state;\r\n              datosEditarContacto.Sexo = e.target.value;\r\n              this.setState({datosEditarContacto});\r\n            }} required=\"true\"  maxlength=\"3\" minlength=\"3\" onBlur={(e)=>{\r\n              if (e.target.value == '')\r\n                {\r\n                  this.setState({isNullSexo: 'true'});\r\n                }else {\r\n                  this.setState({isNullSexo: 'false'});\r\n                }\r\n              }}/>\r\n          </FormGroup>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" onClick={this.actualizarContacto.bind(this)}>\r\n            {loading?<FontAwesomeIcon className=\"mr-2\" icon=\"sync-alt\" spin />: <FontAwesomeIcon className=\"mr-2\" icon=\"database\" />}\r\n            Guardar\r\n          </Button>\r\n          <Button color=\"secondary\" onClick={this.toggleEditarContactoModal.bind(this)}>\r\n            <FontAwesomeIcon className=\"mr-2\" icon=\"times\" />\r\n            Cancelar\r\n          </Button>\r\n        </ModalFooter>\r\n       </Modal>\r\n        <Table>\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>Nombre</th>\r\n              <th>Celular</th>\r\n              <th>Sexo</th>\r\n              <th>Acciones</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {contactosReg}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contactos;\r\n","import React, {Component, Fragment} from 'react';\r\nimport { Nav, NavItem} from 'reactstrap';\r\nimport {withRouter,NavLink } from 'react-router-dom';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\n\r\nclass NavMenu extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loggedIn: false\r\n    };\r\n     this.changeNavItem = this.changeNavItem.bind(this);\r\n  }\r\n\r\ncomponentDidMount(){\r\n\r\n  if (this.props.location.pathname != null)\r\n    this.changeNavItem(this.props.location.pathname);\r\n}\r\n\r\ncomponentWillReceiveProps(nextProps){\r\n\r\n if(this.props.location.pathname !== nextProps.location.pathname){\r\n   this.changeNavItem(nextProps.location.pathname);\r\n  }\r\n}\r\n\r\nchangeNavItem(currentRoute){\r\n\r\n  const token = localStorage.getItem(\"token\");\r\n  let loggedIn = true;\r\n  if (token==null){\r\n    loggedIn = false;\r\n  }\r\n\r\n  this.setState({\r\n    loggedIn: loggedIn\r\n  });\r\n\r\n}\r\n  render() {\r\n    if(this.state.loggedIn===true)\r\n    {\r\n      var letLogout = (\r\n        <Fragment>\r\n          <NavItem>\r\n            <NavLink className=\"nav-link\" to=\"/cerrarSesion\">Cerrar sesion</NavLink>\r\n          </NavItem>\r\n         </Fragment>\r\n      )\r\n    }\r\n    else  {\r\n       var letLogin = (\r\n         <Fragment>\r\n             <NavItem>\r\n               <NavLink className=\"nav-link\" to=\"/iniciarSesion\">Ingresar</NavLink>\r\n             </NavItem>\r\n             <NavItem>\r\n               <NavLink className=\"nav-link\" to=\"/registrarUsuario\">Registrar Usuario</NavLink>\r\n             </NavItem>\r\n        </Fragment>\r\n        )\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n\r\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n            <Nav pills location={this.props.location}>\r\n              <NavItem>\r\n                <NavLink className=\"nav-link\" to=\"/\">Aplicación de Contactos</NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink className=\"nav-link\" to=\"/contactos\">Contactos</NavLink>\r\n              </NavItem>\r\n                {letLogout}\r\n                {letLogin}\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(NavMenu);\r\n","import React, {Component} from 'react';\r\n/*import Navegacion from './Navegacion';*/\r\nclass Home extends Component  {\r\n\r\n  render(){\r\n      return (\r\n\r\n        <div id=\"divHome\">\r\n\r\n          <div className=\"App container\">\r\n\r\n            <h3>Aplicación de React con Apis de seguridad y contactos en ASP NET Core 2.2 </h3>\r\n          </div>\r\n        </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, {Component, Fragment} from 'react';\nimport {BrowserRouter as Routers, Link, Switch, Route, withRouter } from 'react-router-dom';\nimport IniciarSesion from './componentes/seguridad/IniciarSesion';\nimport CerrarSesion from './componentes/seguridad/CerrarSesion';\nimport RegistrarUsuario from './componentes/seguridad/RegistrarUsuario';\nimport Contactos from './componentes/Contactos';\nimport NavMenu from './componentes/NavMenu';\nimport Home from './componentes/Home';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport logo from './logo.svg';\nimport './App.css';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fab } from '@fortawesome/free-brands-svg-icons';\nimport MDSpinner from \"react-md-spinner\";\nimport { faCheckSquare, faCoffee, faTrashAlt, faExclamationTriangle, faTimes, faCheck, faUserCircle, faKey, faSignInAlt, faDatabase, faSyncAlt} from '@fortawesome/free-solid-svg-icons';\n\n//Una Clase que extiende del component de React se comvierte en una etiqueta html\nclass App extends Component  {\n  constructor(props){\n    super(props);\n    this.state = {\n      isLoading:true\n    }\n  }\n  componentDidMount()\n  {\n    //Este metodo se ejecuta despues de componentWillMount, si esta variable se setea a false en componentWillMount\n    // la variable llega a true cuando se renderiza el menú y ya no se mostraría el spinner caundo se cargue la página\n    this.setState({isLoading:false});\n  }\n  render(){\n    library.add(fab, faCheckSquare, faCoffee, faTrashAlt, faExclamationTriangle, faTimes, faCheck, faUserCircle, faKey, faSignInAlt, faDatabase, faSyncAlt);\n    if (this.state.isLoading){\n      return  <MDSpinner className=\"spinner\" size={50}/>\n    }\n    return(\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        </header>\n        <body>\n          <Routers>\n            <Switch>\n              <Fragment>\n                <NavMenu location={this.props.location}></NavMenu>\n                <Route exact path=\"/\" component={Home}></Route>\n                <Route path=\"/iniciarSesion\" component={IniciarSesion}></Route>\n                <Route path=\"/registrarUsuario\" component={RegistrarUsuario}></Route>\n                <Route path=\"/contactos\" component={Contactos}></Route>\n                <Route path=\"/cerrarSesion\" component={CerrarSesion}></Route>\n              </Fragment>\n            </Switch>\n          </Routers>\n        </body>\n      </div>\n      )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\nserviceWorker.register();\n","module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";"],"sourceRoot":""}